{
	// Place your snippets for makefile here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }


	"autoSnippet.snippets": [
		{"pattern": "Makefile", "snippet": "makeit" }
	]

	"makeit": {
		"prefix": ["make"],
		"body": ["NAME\t\t=\t"
					"SRCDIR\t\t=\tsrcs"
					"SRCS\t\t=\t"
					"OBJDIR\t\t=\tobjs"
					"OBJS\t\t=\t$(addprefix $(OBJDIR)/, $(SRCS:.cpp=.o))"
					"CC\t\t\t=\tclang++"
					"FLAGS\t\t=\t-Wall -Wextra -Werror -pedantic -std=c++98"
					"INCS\t\t=\tincludes/\n"
					"all:\t\t$(NAME)\n"
					"$(NAME):\t$(OBJS)"
					"\t@$(CC) $(OBJS) $(FLAGS) -o $(NAME)"
					"\t@echo \"You can now run ./$(NAME), enjoy!\"\n"
					"$(OBJDIR)/%.o:  $(SRCDIR)/%.cpp"
					"\t@mkdir -p $(OBJDIR)"
					"\t@$(CC) $(FLAGS) -c $< -o $@ -I$(INCS)\n"
					"clean:"
					"\t@rm -rf $(OBJDIR)\n"
					"fclean:\t\tclean"
					"\t@rm -f $(NAME)\n"
					"re:\t\t\tfclean all\n"
					".PHONY:\tall clean fclean re .cpp.o\n"],
		"description": "Standard makefile"
	}
	
}